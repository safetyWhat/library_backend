// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          String       @id @default(cuid())
  title       String
  publishedAt DateTime
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  authors     BookAuthor[]
  genres      BookGenre[]
}

model Author {
  id        String       @id @default(cuid())
  name      String
  books     BookAuthor[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Genre {
  id        String      @id @default(cuid())
  name      String      @unique
  books     BookGenre[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model BookGenre {
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId    String
  genre     Genre    @relation(fields: [genreId], references: [id], onDelete: Cascade)
  genreId   String
  createdAt DateTime @default(now())

  @@id([bookId, genreId])
  @@index([bookId])
  @@index([genreId])
}

model BookAuthor {
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId    String
  author    Author   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  createdAt DateTime @default(now())

  @@id([bookId, authorId])
  @@index([bookId])
  @@index([authorId])
}
